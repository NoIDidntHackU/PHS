read from Distance sensor (Jonboan?):






write to 8 digit 7 segment display (NoIDidntHackU):
Schematic:
schematic7sgmnt.png

********************REQUIRED********************
MicroPython library for MAX7219 + 8 x 7digit display boards.

Download the max7219_8digit.py library

Open the RPi Pico as drive, and then copy the library into root directory.

The library provides

-- Initializing the device

-- Set intensity of the device

-- Write To Buffer functionality

-- Send the buffer to MAX7219 device for further processing.
************************************************


'''
 
 * "8 Digit Up Count" at the interval of 100mS.
 * Starting with 9950
 * Resets after it reaches 99999999

 The Raspberry Pi Pico circuit connection for MAX7219:

 * MAX7219 VCC pin to VBUS
 * MAX7219 GND pin to GND
 * MAX7219 DIN pin to digital GPIO3
 * MAX7219 CS pin to digital GPIO5
 * MAX7219 CLOCK pin to digital GPIO2
'''

# Import MicroPython libraries of PIN and SPI
from machine import Pin, SPI

# Import MicoPython MAX7219, 8 digit, 7segment library
import max7219_8digit

# Import timer library
import time

#Intialize the SPI
spi = SPI(0, baudrate=10000000, polarity=1, phase=0, sck=Pin(2), mosi=Pin(3))
ss = Pin(5, Pin.OUT)

#Initialize count variable with 9950 as initial value
count=9950

# Create display instant
display = max7219_8digit.Display(spi, ss)

# Unconditionally execute the loop
while True:
 
 # Prefix "UP -" and add "count variable" as string
 temp = "UP -" + str(count)
 
 # Write the string into display buffer
 display.write_to_buffer(temp)
 
 # Write the buffer into MAX7219
 display.display()
 
 # Increment the count
 count = count + 1
 
 # Validate the count value. If exceeds 10000, reset it it zero.
 if count == 99999999:
     count = 0
     
 # Sleep for about 100mS.   
 time.sleep(0.1)
 
